#![allow(clippy::integer_arithmetic)]/// Integration testing for the PostgreSQL plugin/// This requires a PostgreSQL database named 'solana' be setup at localhost at port 5432/// This is automatically setup in the CI environment.@@ -21,89 +18,33 @@ use solana_sdk::poh_config::PohConfig;use {    libloading::Library,    log::*,    serde_json::json,    serial_test::serial,    solana_accountsdb_plugin_postgres::{        accountsdb_plugin_postgres::AccountsDbPluginPostgresConfig,        postgres_client::SimplePostgresClient,    },    solana_core::validator::ValidatorConfig,    solana_local_cluster::{        local_cluster::{ClusterConfig, LocalCluster},        validator_configs::*,    },    solana_rpc::rpc::JsonRpcConfig,    solana_runtime::snapshot_config::SnapshotConfig,    solana_sdk::{clock::Slot, epoch_schedule::MINIMUM_SLOTS_PER_EPOCH},    solana_streamer::socket::SocketAddrSpace,    std::{        fs::{self, File},        io::Read,        io::Write,        path::{Path, PathBuf},    },    tempfile::TempDir,};const RUST_LOG_FILTER: &str =    "info,solana_core::replay_stage=warn,solana_local_cluster=info,local_cluster=info";fn farf_dir() -> PathBuf {    let dir: String = std::env::var("FARF_DIR").unwrap_or_else(|_| "farf".to_string());    fs::create_dir_all(dir.clone()).unwrap();@@ -224,22 +165,6 @@ fn setup_snapshot_validator_config(    }}fn test_local_cluster_start_and_exit_with_config(socket_addr_space: SocketAddrSpace) {    const NUM_NODES: usize = 1;    let config = ValidatorConfig {@@ -338,8 +263,6 @@ fn test_postgres_plugin() {        .snapshot_config        .full_snapshot_archives_dir;    info!("Waiting for snapshot");    let snap_info = cluster.wait_for_next_full_snapshot(snapshot_archives_dir, None);    info!("Found: full snapshot {:?}", snap_info);
